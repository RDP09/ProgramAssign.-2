install.packages(""slidify"")
install.packages("slidify")
find.package("devtools"")
find.package("devtools")
installed.packages("devtools")
libary(devtools)
find.package(devtools)
find.package("devtools")
installed.packages("devtools")
install.packages("devtools")
libary(devtools)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(cls_list)
sapply(cls_list, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
className(shape_mat)
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
print(unique_vals)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
submit()
1
swirl()
12
2
swirl(2)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
git clone https://github.com/RDP09/ProgrammingAssignment2.git
source('C:/Users/Lil Ryan/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix()
cacheSolve()
source('C:/Users/Lil Ryan/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix()
cacheSolve()
setwd("C:/Users/Lil Ryan/ProgrammingAssignment2")
git initialize()
